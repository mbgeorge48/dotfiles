if [ -e $HOME/.pyenv ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi

function activate_venv() {
    if [ -d .venv ]; then
        .venv/bin/pip install -q --upgrade pip
        if [ -s requirements.txt ]; then
            .venv/bin/pip install -q -r requirements.txt
        fi
        source .venv/bin/activate
    elif [ -d .env ]; then
        .env/bin/pip install -q --upgrade pip
        if [ -s requirements.txt ]; then
            .env/bin/pip install -q -r requirements.txt
        fi
        source .env/bin/activate
    elif [ -d env ]; then
        env/bin/pip install -q --upgrade pip
        if [ -s requirements.txt ]; then
            env/bin/pip install -q -r requirements.txt
        fi
        source env/bin/activate
    elif [ -d venv ]; then
        venv/bin/pip install -q --upgrade pip
        if [ -s requirements.txt ]; then
            venv/bin/pip install -q -r requirements.txt
        fi
        source venv/bin/activate
    else
        pyenv exec python -m venv .venv
        activate_venv
    fi
}

function set_versions_python() {
    if [ -s ".python-version" ]; then
        pyenv install --skip-existing
        activate_venv
    fi
}

set_versions_python

function chpwd() {
    set_versions_python
}
